<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>python内置报错</title>
      <link href="/2024/12/04/python%E5%86%85%E7%BD%AE%E6%8A%A5%E9%94%99/"/>
      <url>/2024/12/04/python%E5%86%85%E7%BD%AE%E6%8A%A5%E9%94%99/</url>
      
        <content type="html"><![CDATA[<ol><li><strong>SyntaxError（语法错误）</strong><ul><li>描述：当Python解释器遇到不符合Python语法规则的代码时会抛出此错误。例如，遗漏了冒号、括号不匹配、缩进错误等。比如下面的代码会引发SyntaxError：<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="literal">True</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Hello&quot;</span>)</span><br></pre></td></tr></table></figure></li><li>原因是<code>if</code>语句后缺少冒号。正确的应该是<code>if True:</code>。</li></ul></li><li><strong>TypeError（类型错误）</strong><ul><li>描述：当操作或函数应用于不适当类型的对象时会出现。例如，对字符串和整数进行不恰当的加法运算，像<code>&quot;abc&quot;+1</code>就会引发TypeError，因为Python不知道如何将一个字符串和一个整数相加。</li></ul></li><li><strong>NameError（名称错误）</strong><ul><li>描述：当尝试访问一个未定义的变量或函数时会抛出。例如：<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(a)</span><br></pre></td></tr></table></figure></li><li>如果<code>a</code>没有在之前定义，就会出现NameError。</li></ul></li><li><strong>IndexError（索引错误）</strong><ul><li>描述：当尝试访问序列（如列表、元组、字符串）中不存在的索引时会出现。例如，一个长度为3的列表<code>my_list = [1, 2, 3]</code>，如果执行<code>my_list[3]</code>，就会引发IndexError，因为索引是从0开始的，这个列表最大索引为2。</li></ul></li><li><strong>KeyError（键错误）</strong><ul><li>描述：当在字典中访问不存在的键时会抛出。例如，有一个字典<code>my_dict = &#123;&quot;a&quot;: 1, &quot;b&quot;: 2&#125;</code>，如果执行<code>my_dict[&quot;c&quot;]</code>，就会引发KeyError，因为字典中没有键<code>c</code>。</li></ul></li><li><strong>ValueError（值错误）</strong><ul><li>描述：当传入一个函数的参数类型正确，但值不合适时会出现。例如，使用<code>int()</code>函数将一个非数字字符串（如<code>&quot;abc&quot;</code>）转换为整数时，就会引发ValueError。</li></ul></li><li><strong>ZeroDivisionError（零除错误）</strong><ul><li>描述：当尝试将一个数除以零时会抛出。例如，<code>1/0</code>会引发ZeroDivisionError。</li></ul></li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>pandas</title>
      <link href="/2024/12/03/pandas%20copy/"/>
      <url>/2024/12/03/pandas%20copy/</url>
      
        <content type="html"><![CDATA[<ol><li><p><strong>Pandas的作用</strong></p><ul><li><strong>数据处理与分析</strong>：Pandas是一个强大的数据分析库，用于处理和分析结构化数据。它提供了高效的数据结构，如<code>Series</code>（一维数据）和<code>DataFrame</code>（二维数据，类似表格），可以方便地进行数据读取、清洗、转换、筛选等操作。</li><li><strong>数据导入和导出</strong>：能够轻松地从各种数据源（如CSV文件、Excel文件、SQL数据库等）导入数据，并将处理后的数据导出为不同的格式。</li><li><strong>数据可视化辅助</strong>：虽然不是专门的可视化工具，但可以和可视化库（如Matplotlib、Seaborn）紧密结合，为数据可视化提供良好的数据准备。</li></ul></li><li><p><strong>代码演示</strong></p><ul><li><strong>数据读取与查看</strong><ul><li>假设我们有一个CSV文件<code>data.csv</code>，内容如下：<br>| Name | Age | Score |<br>| —— | —- | ——- |<br>| Tom  | 20  | 80    |<br>| Jerry| 22  | 85    |<ul><li>用Pandas读取这个文件并查看数据：<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="comment"># 读取CSV文件</span></span><br><span class="line">data = pd.read_csv(<span class="string">&quot;data.csv&quot;</span>)</span><br><span class="line"><span class="comment"># 查看前几行数据</span></span><br><span class="line"><span class="built_in">print</span>(data.head())</span><br></pre></td></tr></table></figure></li></ul></li></ul></li><li><strong>数据筛选与计算</strong><ul><li>从数据中筛选出年龄大于20岁的人的信息，并计算他们的平均分数：<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 筛选年龄大于20岁的人</span></span><br><span class="line">filtered_data = data[data[<span class="string">&quot;Age&quot;</span>] &gt; <span class="number">20</span>]</span><br><span class="line"><span class="comment"># 计算平均分数</span></span><br><span class="line">average_score = filtered_data[<span class="string">&quot;Score&quot;</span>].mean()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;平均分数:&quot;</span>, average_score)</span><br></pre></td></tr></table></figure></li></ul></li><li><strong>数据合并与排序</strong><ul><li>假设我们还有一个新的数据文件<code>new_data.csv</code>，内容如下：<br>| Name | Grade |<br>| —— | ——- |<br>| Tom  | A     |<br>| Jerry| B     |<ul><li>读取新数据并和原数据合并，然后按照分数进行排序：<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">new_data = pd.read_csv(<span class="string">&quot;new_data.csv&quot;</span>)</span><br><span class="line"><span class="comment"># 合并数据</span></span><br><span class="line">merged_data = pd.merge(data, new_data, on=<span class="string">&quot;Name&quot;</span>)</span><br><span class="line"><span class="comment"># 按照分数排序</span></span><br><span class="line">sorted_data = merged_data.sort_values(by=<span class="string">&quot;Score&quot;</span>, ascending=<span class="literal">False</span>)</span><br><span class="line"><span class="built_in">print</span>(sorted_data)</span><br></pre></td></tr></table></figure></li></ul></li></ul></li></ul></li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>matplotlib</title>
      <link href="/2024/12/03/pandas/"/>
      <url>/2024/12/03/pandas/</url>
      
        <content type="html"><![CDATA[<ol><li><strong><code>plot</code>函数所属包</strong><ul><li>在Python中，<code>plot</code>函数最常见于<code>matplotlib</code>库。<code>matplotlib</code>是一个广泛使用的绘图库，用于创建各种静态、动态和交互式的可视化图表。在<code>matplotlib</code>中，<code>plot</code>函数主要用于绘制折线图。例如，绘制一个简单的函数 $y = x^2$ 在区间 $[0, 10]$ 的图像，代码如下：<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">x = np.linspace(<span class="number">0</span>, <span class="number">10</span>, <span class="number">100</span>)</span><br><span class="line">y = x ** <span class="number">2</span></span><br><span class="line">plt.plot(x, y)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure></li><li>这里先导入了<code>matplotlib.pyplot</code>模块并简称为<code>plt</code>，以及<code>numpy</code>模块。然后生成了<code>x</code>轴的数据（从0到10均匀分布的100个点），计算出对应的<code>y</code>轴数据（<code>x</code>的平方），通过<code>plt.plot</code>绘制折线图，最后使用<code>plt.show</code>展示图形。</li></ul></li></ol><ol><li><ul><li><strong><code>scatter</code>（<code>matplotlib</code>库）</strong>：用于绘制散点图，它可以很好地展示两个变量之间的关系或者数据的分布情况。例如，展示学生的身高和体重的关系：<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line">height = [<span class="number">170</span>, <span class="number">175</span>, <span class="number">160</span>, <span class="number">180</span>, <span class="number">165</span>]</span><br><span class="line">weight = [<span class="number">60</span>, <span class="number">70</span>, <span class="number">55</span>, <span class="number">80</span>, <span class="number">65</span>]</span><br><span class="line">plt.scatter(height, weight)</span><br><span class="line">plt.xlabel(<span class="string">&quot;Height&quot;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&quot;Weight&quot;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure></li></ul></li><li><ul><li><strong><code>bar</code>（<code>matplotlib</code>库）</strong>：用于绘制柱状图，适合比较不同类别之间的数据大小。比如比较不同水果的销量：<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line">fruits = [<span class="string">&quot;Apple&quot;</span>, <span class="string">&quot;Banana&quot;</span>, <span class="string">&quot;Cherry&quot;</span>]</span><br><span class="line">sales = [<span class="number">100</span>, <span class="number">150</span>, <span class="number">80</span>]</span><br><span class="line">plt.bar(fruits, sales)</span><br><span class="line">plt.xlabel(<span class="string">&quot;Fruits&quot;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&quot;Sales&quot;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure></li></ul><ol><li><ul><li><strong><code>hist</code>（<code>matplotlib</code>库）</strong>：用于绘制直方图，主要用于展示数据的分布。例如，展示一组学生考试成绩的分布：<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">scores = np.random.normal(<span class="number">70</span>, <span class="number">10</span>, <span class="number">100</span>)</span><br><span class="line">plt.hist(scores, bins=<span class="number">10</span>)</span><br><span class="line">plt.xlabel(<span class="string">&quot;Scores&quot;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&quot;Frequency&quot;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure></li></ul></li><li><ul><li><strong><code>pie</code>（<code>matplotlib</code>库）</strong>：用于绘制饼图，用于展示各部分占总体的比例关系。例如，展示一个班级不同成绩等级的学生比例：<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line">grades = [<span class="string">&quot;A&quot;</span>, <span class="string">&quot;B&quot;</span>, <span class="string">&quot;C&quot;</span>, <span class="string">&quot;D&quot;</span>, <span class="string">&quot;F&quot;</span>]</span><br><span class="line">percentages = [<span class="number">20</span>, <span class="number">30</span>, <span class="number">25</span>, <span class="number">15</span>, <span class="number">10</span>]</span><br><span class="line">plt.pie(percentages, labels=grades)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure></li></ul></li><li><ul><li><strong><code>seaborn</code>库中的画图函数</strong>：<br>pairplot：用于绘制数据集中变量两两之间的关系图。如果有一个包含多个变量的数据集，<code>pairplot</code>可以同时展示多个散点图和直方图，方便观察变量之间的相关性和分布。例如，对于<code>iris</code>数据集（鸢尾花数据集）：<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> seaborn <span class="keyword">as</span> sns</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line">iris = pd.read_csv(<span class="string">&quot;iris.csv&quot;</span>)</span><br><span class="line">sns.pairplot(iris)</span><br></pre></td></tr></table></figure></li></ul></li><li><ul><li><strong><code>heatmap</code></strong>：用于绘制热力图，通常用于展示二维数据的密度或相关性。例如，展示一个相关系数矩阵的热力图：</li></ul></li></ol></li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> seaborn <span class="keyword">as</span> sns</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line">data = np.random.rand(<span class="number">5</span>, <span class="number">5</span>)</span><br><span class="line">corr_matrix = pd.DataFrame(data)</span><br><span class="line">sns.heatmap(corr_matrix)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>numpy</title>
      <link href="/2024/12/02/numpy/"/>
      <url>/2024/12/02/numpy/</url>
      
        <content type="html"><![CDATA[<ol><li><strong>创建数组</strong><ul><li><strong>使用<code>np.array()</code>创建简单数组</strong><ul><li>可以从Python列表或元组创建NumPy数组。例如，创建一个一维数组：<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">one_d_array = np.array([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>])</span><br><span class="line"><span class="built_in">print</span>(one_d_array)</span><br></pre></td></tr></table></figure>这会输出<code>[1 2 3 4 5]</code>。</li><li>创建一个二维数组：<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">two_d_array = np.array([[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]])</span><br><span class="line"><span class="built_in">print</span>(two_d_array)</span><br></pre></td></tr></table></figure>输出为：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[[1 2 3]</span><br><span class="line"> [4 5 6]]</span><br></pre></td></tr></table></figure></li></ul></li><li><strong>使用特定函数创建数组</strong><ul><li><code>np.zeros()</code>：创建全零数组。例如，创建一个形状为(3, 4)的二维全零数组：<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">zeros_array = np.zeros((<span class="number">3</span>, <span class="number">4</span>))</span><br><span class="line"><span class="built_in">print</span>(zeros_array)</span><br></pre></td></tr></table></figure>输出为：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[[0. 0. 0. 0.]</span><br><span class="line"> [0. 0. 0. 0.]</span><br><span class="line"> [0. 0. 0. 0.]]</span><br></pre></td></tr></table></figure></li><li><code>np.ones()</code>：创建全一数组。创建一个形状为(2, 3)的二维全一数组：<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ones_array = np.ones((<span class="number">2</span>, <span class="number">3</span>))</span><br><span class="line"><span class="built_in">print</span>(ones_array)</span><br></pre></td></tr></table></figure>输出为：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[[1. 1. 1.]</span><br><span class="line"> [1. 1. 1.]]</span><br></pre></td></tr></table></figure></li><li><code>np.arange()</code>：类似于Python的<code>range()</code>函数，用于创建一个等差数组。例如，创建一个从0开始，以2为步长，到10结束（不包括10）的数组：<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">arange_array = np.arange(<span class="number">0</span>, <span class="number">10</span>, <span class="number">2</span>)</span><br><span class="line"><span class="built_in">print</span>(arange_array)</span><br></pre></td></tr></table></figure>输出为<code>[0 2 4 6 8]</code>。</li><li><code>np.linspace()</code>：创建一个在指定区间内均匀分布的数组。例如，创建一个在0到1之间，包含5个元素的数组：<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">linspace_array = np.linspace(<span class="number">0</span>, <span class="number">1</span>, <span class="number">5</span>)</span><br><span class="line"><span class="built_in">print</span>(linspace_array)</span><br></pre></td></tr></table></figure>输出为<code>[0.   0.25 0.5  0.75 1.  ]</code>。</li></ul></li></ul></li><li><strong>数组的基本属性和操作</strong><ul><li><strong>形状（Shape）和维度（Dimension）</strong><ul><li>可以通过<code>shape</code>属性获取数组的形状。对于二维数组，它返回一个包含行数和列数的元组。例如：<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">two_d_array = np.array([[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]])</span><br><span class="line"><span class="built_in">print</span>(two_d_array.shape)</span><br></pre></td></tr></table></figure>输出为<code>(2, 3)</code>，表示这是一个2行3列的二维数组。</li><li>可以通过<code>ndim</code>属性获取数组的维度。例如：<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">one_d_array = np.array([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>])</span><br><span class="line"><span class="built_in">print</span>(one_d_array.ndim)</span><br></pre></td></tr></table></figure>输出为1，表示这是一个一维数组。</li></ul></li><li><strong>数据类型（Data Type）</strong><ul><li>可以通过<code>dtype</code>属性查看数组的数据类型。例如：<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">int_array = np.array([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>])</span><br><span class="line"><span class="built_in">print</span>(int_array.dtype)</span><br></pre></td></tr></table></figure>输出为<code>int64</code>（在大多数情况下）。可以在创建数组时指定数据类型，如：<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">float_array = np.array([<span class="number">1.0</span>, <span class="number">2.0</span>, <span class="number">3.0</span>], dtype = np.float32)</span><br><span class="line"><span class="built_in">print</span>(float_array.dtype)</span><br></pre></td></tr></table></figure>输出为<code>float32</code>。</li></ul></li><li><strong>数组的索引和切片</strong><ul><li>对于一维数组，索引和Python列表类似。例如：<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">one_d_array = np.array([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>])</span><br><span class="line"><span class="built_in">print</span>(one_d_array[<span class="number">2</span>])</span><br></pre></td></tr></table></figure>输出为3，表示获取索引为2的元素。</li><li>切片操作也类似。例如，获取索引从1开始（包括1）到4结束（不包括4）的元素：<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(one_d_array[<span class="number">1</span>:<span class="number">4</span>])</span><br></pre></td></tr></table></figure>输出为<code>[2 3 4]</code>。</li><li>对于二维数组，使用两个索引来定位元素。例如：<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">two_d_array = np.array([[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]])</span><br><span class="line"><span class="built_in">print</span>(two_d_array[<span class="number">1</span>, <span class="number">2</span>])</span><br></pre></td></tr></table></figure>输出为6，表示获取第二行（索引为1）第三列（索引为2）的元素。</li><li>二维数组的切片操作。例如，获取第一行的所有元素：<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(two_d_array[<span class="number">0</span>, :])</span><br></pre></td></tr></table></figure>输出为<code>[1 2 3]</code>，也可以写成<code>two_d_array[0]</code>。获取第一列的所有元素：<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(two_d_array[:, <span class="number">0</span>])</span><br></pre></td></tr></table></figure>输出为<code>[1 4]</code>。</li></ul></li></ul></li><li><strong>数学运算</strong><ul><li><strong>元素级运算（Element - wise Operations）</strong><ul><li>可以对数组进行加、减、乘、除等运算。例如，对于两个形状相同的数组进行加法运算：<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">array1 = np.array([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>])</span><br><span class="line">array2 = np.array([<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>])</span><br><span class="line"><span class="built_in">print</span>(array1 + array2)</span><br></pre></td></tr></table></figure>输出为<code>[5 7 9]</code>。同样可以进行减法、乘法和除法运算。</li><li>还可以对数组和一个标量进行运算。例如，将数组中的每个元素乘以2：<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(array1 * <span class="number">2</span>)</span><br></pre></td></tr></table></figure>输出为<code>[2 4 6]</code>。</li></ul></li><li><strong>矩阵运算（Matrix Operations）</strong><ul><li>对于二维数组，可以进行矩阵乘法。使用<code>np.dot()</code>函数或<code>@</code>运算符。例如：<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">matrix1 = np.array([[<span class="number">1</span>, <span class="number">2</span>], [<span class="number">3</span>, <span class="number">4</span>]])</span><br><span class="line">matrix2 = np.array([[<span class="number">5</span>, <span class="number">6</span>], [<span class="number">7</span>, <span class="number">8</span>]])</span><br><span class="line"><span class="built_in">print</span>(np.dot(matrix1, matrix2))</span><br><span class="line"><span class="comment"># 或者</span></span><br><span class="line"><span class="built_in">print</span>(matrix1 @ matrix2)</span><br></pre></td></tr></table></figure>输出为：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[[19 22]</span><br><span class="line"> [43 50]]</span><br></pre></td></tr></table></figure></li><li>计算矩阵的转置。对于二维数组<code>matrix</code>，可以使用<code>matrix.T</code>来获取其转置。例如：<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">matrix = np.array([[<span class="number">1</span>, <span class="number">2</span>], [<span class="number">3</span>, <span class="number">4</span>]])</span><br><span class="line"><span class="built_in">print</span>(matrix.T)</span><br></pre></td></tr></table></figure>输出为：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[[1 3]</span><br><span class="line"> [2 4]]</span><br></pre></td></tr></table></figure></li></ul></li></ul></li><li><strong>统计和聚合函数</strong><ul><li><strong>基本统计函数</strong><ul><li><code>np.mean()</code>：计算数组的平均值。例如，对于一维数组：<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">array = np.array([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>])</span><br><span class="line"><span class="built_in">print</span>(np.mean(array))</span><br></pre></td></tr></table></figure>输出为3.0。对于二维数组，可以指定轴来计算每行或每列的平均值。例如，计算二维数组每行的平均值：<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">two_d_array = np.array([[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]])</span><br><span class="line"><span class="built_in">print</span>(np.mean(two_d_array, axis = <span class="number">1</span>))</span><br></pre></td></tr></table></figure>输出为<code>[2. 5.]</code>，表示第一行平均值为2，第二行平均值为5。</li><li><code>np.median()</code>：计算数组的中位数。例如：<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(np.median(array))</span><br></pre></td></tr></table></figure>输出为3。</li><li><code>np.std()</code>：计算数组的标准差。例如：<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(np.std(array))</span><br></pre></td></tr></table></figure>输出为<code>1.4142135623730951</code>（约为$\sqrt{2}$）。</li></ul></li><li><strong>最值和求和函数</strong><ul><li><code>np.max()</code>和<code>np.min()</code>：分别计算数组的最大值和最小值。例如：<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(np.<span class="built_in">max</span>(array))</span><br><span class="line"><span class="built_in">print</span>(np.<span class="built_in">min</span>(array))</span><br></pre></td></tr></table></figure>输出为5和1。对于二维数组，可以指定轴来获取每行或每列的最值。</li><li><code>np.sum()</code>：计算数组的总和。例如：<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(np.<span class="built_in">sum</span>(array))</span><br></pre></td></tr></table></figure>输出为15。对于二维数组，也可以指定轴来计算每行或每列的和。</li></ul></li></ul></li><li><strong>排序和搜索</strong><ul><li><strong>排序函数</strong><ul><li><code>np.sort()</code>：对数组进行排序。对于一维数组，它会返回一个排序后的新数组。例如：<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">array = np.array([<span class="number">3</span>, <span class="number">1</span>, <span class="number">4</span>, <span class="number">1</span>, <span class="number">5</span>])</span><br><span class="line"><span class="built_in">print</span>(np.sort(array))</span><br></pre></td></tr></table></figure>输出为<code>[1 1 3 4 5]</code>。对于二维数组，默认对每行进行排序。例如：<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">two_d_array = np.array([[<span class="number">3</span>, <span class="number">1</span>, <span class="number">4</span>], [<span class="number">1</span>, <span class="number">5</span>, <span class="number">9</span>]])</span><br><span class="line"><span class="built_in">print</span>(np.sort(two_d_array))</span><br></pre></td></tr></table></figure>输出为：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[[1 3 4]</span><br><span class="line"> [1 5 9]]</span><br></pre></td></tr></table></figure></li><li>可以使用<code>np.argsort()</code>函数获取排序后的索引。例如：<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">array = np.array([<span class="number">3</span>, <span class="number">1</span>, <span class="number">4</span>, <span class="number">1</span>, <span class="number">5</span>])</span><br><span class="line"><span class="built_in">print</span>(np.argsort(array))</span><br></pre></td></tr></table></figure>输出为<code>[1 3 0 2 4]</code>，表示排序后元素原来的索引顺序。</li></ul></li><li><strong>搜索函数</strong><ul><li><code>np.argmax()</code>和<code>np.argmin()</code>：分别返回数组中最大值和最小值的索引。例如：<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">array = np.array([<span class="number">3</span>, <span class="number">1</span>, <span class="number">4</span>, <span class="number">1</span>, <span class="number">5</span>])</span><br><span class="line"><span class="built_in">print</span>(np.argmax(array))</span><br><span class="line"><span class="built_in">print</span>(np.argmin(array))</span><br></pre></td></tr></table></figure>输出为4和1。对于二维数组，可以指定轴来获取每行或每列最值的索引。</li></ul></li></ul></li><li><strong>广播（Broadcasting）</strong><ul><li>广播是NumPy的一个强大功能，它允许不同形状的数组在一定规则下进行运算。例如，一个形状为(3, 1)的数组和一个形状为(1, 3)的数组相加，NumPy会自动将它们的形状进行扩展以进行元素级别的加法运算。<ul><li>假设我们有一个列向量和一个行向量：<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">column_vector = np.array([[<span class="number">1</span>], [<span class="number">2</span>], [<span class="number">3</span>]])</span><br><span class="line">row_vector = np.array([<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>])</span><br><span class="line"><span class="built_in">print</span>(column_vector + row_vector)</span><br></pre></td></tr></table></figure>输出为：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[[5 6 7]</span><br><span class="line"> [6 7 8]</span><br><span class="line"> [7 8 9]]</span><br></pre></td></tr></table></figure></li></ul></li></ul></li><li><strong>线性代数操作</strong><ul><li><strong>求解线性方程组</strong><ul><li>可以使用<code>np.linalg.solve()</code>函数来求解线性方程组。例如，对于方程组$Ax = b$，其中$A$是系数矩阵，$x$是未知数向量，$b$是常数项向量。假设$A=\begin{bmatrix}1&amp;2\3&amp;4\end{bmatrix}$，$b=\begin{bmatrix}5\6\end{bmatrix}$，则可以这样求解：<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A = np.array([[<span class="number">1</span>, <span class="number">2</span>], [<span class="number">3</span>, <span class="number">4</span>]])</span><br><span class="line">b = np.array([<span class="number">5</span>, <span class="number">6</span>])</span><br><span class="line">x = np.linalg.solve(A, b)</span><br><span class="line"><span class="built_in">print</span>(x)</span><br></pre></td></tr></table></figure>输出为<code>[-4.  4.5]</code>，即$x_1=-4$，$x_2 = 4.5$。</li></ul></li><li><strong>计算矩阵的特征值和特征向量</strong><ul><li>使用<code>np.linalg.eig()</code>函数。例如，对于矩阵$A=\begin{bmatrix}1&amp;2\2&amp;1\end{bmatrix}$：<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">A = np.array([[<span class="number">1</span>, <span class="number">2</span>], [<span class="number">2</span>, <span class="number">1</span>]])</span><br><span class="line">eigenvalues, eigenvectors = np.linalg.eig(A)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;特征值:&quot;</span>, eigenvalues)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;特征向量:&quot;</span>, eigenvectors)</span><br></pre></td></tr></table></figure>输出为：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">特征值: [-1.  3.]</span><br><span class="line">特征向量: [[-0.70710678 -0.70710678]</span><br><span class="line">             [ 0.70710678 -0.70710678]]</span><br></pre></td></tr></table></figure></li></ul></li></ul></li><li><strong>随机数生成</strong><ul><li><strong>均匀分布随机数</strong><ul><li>使用<code>np.random.uniform()</code>函数生成在指定区间内均匀分布的随机数。例如，生成10个在0到1之间均匀分布的随机数：<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">uniform_random_numbers = np.random.uniform(<span class="number">0</span>, <span class="number">1</span>, <span class="number">10</span>)</span><br><span class="line"><span class="built_in">print</span>(uniform_random_numbers)</span><br></pre></td></tr></table></figure>会输出10个介于0和1之间的随机数。</li></ul></li><li><strong>正态分布随机数</strong><ul><li>使用<code>np.random.normal()</code>函数生成服从正态分布的随机数。例如，生成5个均值为0，标准差为1的正态分布随机数：<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">normal_random_numbers = np.random.normal(<span class="number">0</span>, <span class="number">1</span>, <span class="number">5</span>)</span><br><span class="line"><span class="built_in">print</span>(normal_random_numbers)</span><br></pre></td></tr></table></figure>会输出5个近似服从正态分布的随机数。</li></ul></li></ul></li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>css</title>
      <link href="/2024/11/14/css/"/>
      <url>/2024/11/14/css/</url>
      
        <content type="html"><![CDATA[<h1 id="CSS样式"><a href="#CSS样式" class="headerlink" title="CSS样式"></a>CSS样式</h1><p><strong><code>*</code>（通配选择器）</strong>：</p><p><strong><code>margin</code></strong>：</p><ul><li>设置元素外边距，控制与周围元素间隔，代码中设为0清除默认外边距。</li></ul><p><strong><code>padding</code></strong>：</p><ul><li>设置元素内边距，即内容与边框距离，代码中设为0清除默认内边距。</li></ul><p><strong><code>background</code>（<code>body</code>元素）</strong>：</p><ul><li>设置元素背景，<code>body</code>中用<code>url(4.jpeg)</code>指定图片路径且<code>background-size: cover</code>让图片自适应铺满（因<code>body</code>宽100%、高100vh，铺满视口）。</li></ul><p><strong><code>width</code>（<code>body</code>元素）</strong>：</p><ul><li>设置元素宽度，<code>body</code>中设为100%与浏览器视口宽度相同。</li></ul><p><strong><code>height</code>（<code>body</code>元素）</strong>：</p><ul><li>设置元素高度，<code>body</code>中设为100vh即视口高度100%，填满视口。</li></ul><p><strong><code>display: flex</code>（<code>header</code>元素）</strong>：</p><ul><li>把<code>header</code>设为弹性容器，内部子元素按弹性布局规则排列，方便水平或垂直方向对齐、分布。</li></ul><p><strong><code>align-items</code>（<code>header</code>元素）</strong>：</p><ul><li>在<code>header</code>弹性容器中，控制子元素在交叉轴（垂直主轴）上居中对齐。</li></ul><p><strong><code>justify-content</code>（<code>header</code>元素）</strong>：</p><ul><li>在<code>header</code>弹性容器中，控制子元素在主轴（默认水平，可改）上均匀分布且两端留间隔。</li></ul><p><strong><code>background-color</code>（<code>header</code>元素）</strong>：</p><ul><li>设置<code>header</code>元素背景色为半透明黑色<code>rgba(0, 0, 0, 0.2)</code>。</li></ul><p><strong><code>backdrop-filter: blur(10px)</code>（<code>header</code>元素）</strong>：</p><ul><li>对<code>header</code>背后内容应用模糊效果，半径10px，营造层次感和视觉焦点。</li></ul><p><strong><code>height</code>（<code>header</code>元素）</strong>：</p><ul><li>设置<code>header</code>元素高度为80px。</li></ul><p><strong><code>color</code>（<code>loge</code>、<code>nav a</code>、<code>user-form-groud a</code>等元素）</strong>：</p><ul><li>设置元素内部文本颜色为白色。</li></ul><p><strong><code>text-decoration</code>（<code>nav a</code>、<code>user-form-groud a</code>等元素）</strong>：</p><ul><li>控制文本无下划线等装饰效果。</li></ul><p><strong><code>font-weight</code>（<code>nav a</code>、<code>user-form-groud a</code>等元素）</strong>：</p><ul><li>设置文本字体粗细为600，呈现较粗效果。</li></ul><p><strong><code>font-size</code>（<code>nav a</code>、<code>user-form-groud a</code>等元素）</strong>：</p><ul><li>设置文本字体大小为18px。</li></ul><p><strong><code>padding</code>（<code>nav a</code>等元素）</strong>：</p><ul><li>在<code>nav a</code>等元素设置内边距，如<code>padding: 8px 16px</code>，增加文本与边框间隔、点击区域和视觉效果。</li></ul><p><strong><code>transition</code>（<code>nav a</code>、<code>signup</code>等元素）</strong>：</p><ul><li>设置元素属性变化时过渡效果，设过渡时间300ms，属性变化有平滑过渡。</li></ul><p><strong><code>border-radius</code>（<code>nav a</code>、<code>signup</code>等元素）</strong>：</p><ul><li>设置元素边框圆角半径为99px，使边框圆润、外观更美观。</li></ul><p><strong><code>display: none</code>（<code>nav.loge</code>、<code>#check</code>、<code>user-form-groud label</code>等元素）</strong>：</p><ul><li>隐藏元素，页面布局中不占空间。</li></ul><p><strong><code>position: absolute</code>（<code>nav</code>元素媒体查询中、<code>adjust</code>元素）</strong>：</p><ul><li>设置元素为绝对定位，脱离文档流，依指定坐标（如<code>top</code>、<code>left</code>等）定位。</li></ul><p><strong><code>flex-direction: column</code>（<code>nav</code>元素媒体查询中）</strong>：</p><ul><li>在<code>nav</code>弹性容器（媒体查询中），改主轴方向为垂直，子元素按弹性布局垂直排列。</li></ul><p><strong><code>gap</code>（<code>nav</code>元素媒体查询中）</strong>：</p><ul><li>在<code>nav</code>弹性容器（媒体查询中），设置子元素间隔为16px。</li></ul><p><strong><code>box-shadow</code>（<code>nav</code>元素媒体查询中）</strong>：</p><ul><li>给<code>nav</code>元素（媒体查询中）添加阴影效果，如<code>box-shadow: 10px 0px 10px rgba(0, 0, 0, 0.2)</code>。</li></ul><p><strong><code>z-index</code>（<code>adjust</code>元素）</strong>：</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>js</title>
      <link href="/2024/11/14/js/"/>
      <url>/2024/11/14/js/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>vsc快捷键</title>
      <link href="/2024/11/14/vsc%E5%BF%AB%E6%8D%B7%E9%94%AE/"/>
      <url>/2024/11/14/vsc%E5%BF%AB%E6%8D%B7%E9%94%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="vsc快捷键"><a href="#vsc快捷键" class="headerlink" title="vsc快捷键"></a>vsc快捷键</h1><div class="table-container"><table><thead><tr><th>快捷键</th><th>作用</th></tr></thead><tbody><tr><td>Ctrl + Enter</td><td>行中换行</td></tr><tr><td>Alt + Up / Alt + Down</td><td>上下移行</td></tr><tr><td>Shift + Alt + Up / Shift + Alt + Down</td><td>上下复制</td></tr><tr><td>Ctrl + Left / Ctrl + Right</td><td>跳单词（跳块）</td></tr><tr><td>Ctrl + Delete / Ctrl + Backspace</td><td>删单词（删块）</td></tr><tr><td>Ctrl + 1（多按几次）</td><td>选单行，继续按选多行</td></tr><tr><td>Shift + Delete</td><td>删一行</td></tr><tr><td>Ctrl + C &amp;&amp; Ctrl + V</td><td>复制一行，粘贴一行</td></tr><tr><td>Ctrl + J</td><td>下栏</td></tr><tr><td>Ctrl + B</td><td>左栏</td></tr><tr><td>Ctrl + `</td><td>终端</td></tr><tr><td>Ctrl + LBtton/ctrl＋art</td><td>多行选择</td></tr><tr><td>Ctrl + /</td><td>注释</td></tr><tr><td>Ctrl + [/]</td><td>缩进</td></tr><tr><td>Ctrl + /</td><td>注释</td></tr><tr><td>Ctrl + cv</td><td>行复制粘贴</td></tr><tr><td>Ctrl + -</td><td>UI缩放</td></tr><tr><td>Ctrl + Shift + P</td><td>打开命令面板（执行各种命令）</td></tr><tr><td>Ctrl + P</td><td>在文件夹内搜索文件</td></tr><tr><td>F2</td><td>重命名变量</td></tr><tr><td>shift + alt + f</td><td>格式化代码</td></tr></tbody></table></div>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>做一个平和的人</title>
      <link href="/2024/11/14/%E5%B9%B3%E5%92%8C%E7%AF%87/"/>
      <url>/2024/11/14/%E5%B9%B3%E5%92%8C%E7%AF%87/</url>
      
        <content type="html"><![CDATA[<h1 id="做一个-平和-的人"><a href="#做一个-平和-的人" class="headerlink" title="做一个 平和 的人"></a>做一个 <u>平和</u> 的人</h1><ul><li>不要以情感作为前进的动力,例如厌恶</li><li>不要过分专注于过去与未来,<u>珍惜当下</u></li><li>快乐不是幸福,平和才是</li><li>平和的人能更快进入心流</li></ul><h2 id="1-在接受中寻找幸福"><a href="#1-在接受中寻找幸福" class="headerlink" title="1.在接受中寻找幸福"></a>1.在接受中寻找幸福</h2><p>  于接受中寻找幸福在生活中，无论面对何种状况，你都有三种选择：改变现状，接受现状，逃避现状。试图改变现状是一种欲望。在成功改变现状之前，欲望会让人感到痛苦.所以不要总想着去改变外部环境。在任何特定的时间段，只选择一个最有价值的欲望，作为自己的奋斗目标和动力之源。</p><h3 id="为什么不能同时选择两个欲望？"><a href="#为什么不能同时选择两个欲望？" class="headerlink" title="为什么不能同时选择两个欲望？"></a>为什么不能同时选择两个欲望？</h3><p>  因为这样会让人分心。即使追求一个欲望，也已经很难了。平静的内心源于毫无杂念的大脑。而消除杂念，很大程度上依赖于活在当下。如果你一直在想，​“我需要这样做，我想要那个东西，这种情况必须改变”​，你就很难保持心态平和。再次强调，无论面对何种状况，你都有三种选择：改变现状，接受现状，逃避现状。很多人在遇到问题时会踟蹰不前，陷入空想：希望改变现状却没有横下一条心去改变，希望转身离开却没有毅然决然地离去，同时又不能心平气和地接受现状。这种纠结和回避的态度正是人生中大部分痛苦的来源。我在脑海里对自己说得最多的就是两个字：接受。</p><h2 id="2-幸福来需要活在当下"><a href="#2-幸福来需要活在当下" class="headerlink" title="2.幸福来需要活在当下"></a>2.幸福来需要活在当下</h2><p>  幸福需要活在当下在任何时候（比如走路的时候）​，大脑都只有很小一部分是关注当下的。大脑把主要精力用于规划未来或悔恨过去。这样的运行机制让人无法获得绝妙的体验，无法欣赏周遭一切事物的美妙之处，无法因为现状常怀感恩之心。如果每天都沉浸在对未来的规划和幻想中，那就是在亲手扼杀自己的幸福。我们渴望那些让我们能感知当下的体验，殊不知，这样的渴望却让我们脱离了当下。我认为，过去就是过去了，没有回忆，没有遗憾，没有放不下的人，没有忘不掉的旅行。既往不恋。人之所以感到痛苦，很多时候是因为拿以往和现在做比较。以往种种未能实现的欲念会带来现在的缺憾感，而我们又将弥补现实缺憾的希望寄托于未来。<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">消除缺憾感会让人更容易活在当下。</span><br><span class="line">你有没有想过，现在的生活可能就是上帝承诺给你的天堂，而你却毫不珍惜，肆意挥霍？</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Markdown语法与外挂标签写法汇总</title>
      <link href="/2024/11/11/markdown/"/>
      <url>/2024/11/11/markdown/</url>
      
        <content type="html"><![CDATA[<h1 id="1-Markdown语法自带格式"><a href="#1-Markdown语法自带格式" class="headerlink" title="1.Markdown语法自带格式"></a>1.Markdown语法自带格式</h1><div class="note info flat"><p>参考：<a href="https://blog.csdn.net/u014061630/article/details/81359144">Markdown语法图文全面详解</a></p></div><div class="note warning flat"><p>注意：此页面偶尔会存在CSS冲突问题!</p></div><h2 id="1-1-代码块"><a href="#1-1-代码块" class="headerlink" title="1.1 代码块"></a>1.1 代码块</h2><div class="tabs"><div class="nav-tabs"><button type="button" class="tab active">示例源码</button><button type="button" class="tab">渲染演示</button></div><div class="tab-contents"><div class="tab-item-content active"><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">\```shell</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">VSCode终端</span></span><br><span class="line">hexo clean; hexo s</span><br><span class="line">hexo clean; hexo g; hexo d</span><br><span class="line">git add .; git commit -m &quot;npm publish&quot;; npm version patch; </span><br><span class="line">git push</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Cmder终端</span></span><br><span class="line">hexo clean &amp;&amp; hexo s</span><br><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</span><br><span class="line">git add . &amp;&amp; git commit -m &quot;npm publish&quot; &amp;&amp; npm version patch</span><br><span class="line">git push</span><br><span class="line">\```</span><br></pre></td></tr></table></figure></div><div class="tab-item-content"><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">VSCode终端</span></span><br><span class="line">hexo clean; hexo s</span><br><span class="line">hexo clean; hexo g; hexo d</span><br><span class="line">git add .; git commit -m &quot;npm publish&quot;; npm version patch; </span><br><span class="line">git push</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Cmder终端</span></span><br><span class="line">hexo clean &amp;&amp; hexo s</span><br><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</span><br><span class="line">git add . &amp;&amp; git commit -m &quot;npm publish&quot; &amp;&amp; npm version patch</span><br><span class="line">git push</span><br></pre></td></tr></table></figure></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h2 id="1-2-多级标题"><a href="#1-2-多级标题" class="headerlink" title="1.2 多级标题"></a>1.2 多级标题</h2><div class="tabs"><div class="nav-tabs"><button type="button" class="tab active">示例源码</button><button type="button" class="tab">渲染演示</button></div><div class="tab-contents"><div class="tab-item-content active"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># H1</span></span><br><span class="line"><span class="section">## H2</span></span><br><span class="line"><span class="section">### H3</span></span><br><span class="line"><span class="section">#### H4</span></span><br><span class="line"><span class="section">##### H5</span></span><br><span class="line"><span class="section">###### H6</span></span><br></pre></td></tr></table></figure></div><div class="tab-item-content"><p>见本文章标题!</p></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h2 id="1-3-文字样式"><a href="#1-3-文字样式" class="headerlink" title="1.3 文字样式"></a>1.3 文字样式</h2><div class="tabs"><div class="nav-tabs"><button type="button" class="tab active">示例源码</button><button type="button" class="tab">渲染演示</button></div><div class="tab-contents"><div class="tab-item-content active"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">u</span>&gt;</span></span>下划线演示<span class="language-xml"><span class="tag">&lt;/<span class="name">u</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">文字<span class="strong">**加粗**</span>演示</span><br><span class="line"></span><br><span class="line">文字<span class="emphasis">*斜体*</span>演示</span><br><span class="line"></span><br><span class="line">文本<span class="code">`高亮`</span>演示</span><br><span class="line"></span><br><span class="line">文本~~删除~~线演示</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">font</span> <span class="attr">size</span> = <span class="string">5</span> &gt;</span></span>5号字<span class="language-xml"><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">font</span> <span class="attr">face</span>=<span class="string">&quot;黑体&quot;</span>&gt;</span></span>黑体<span class="language-xml"><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">font</span> <span class="attr">face</span>=<span class="string">&quot;Arial&quot;</span> <span class="attr">size</span>=<span class="string">&quot;3&quot;</span> <span class="attr">color</span>=<span class="string">&quot;red&quot;</span>&gt;</span></span>这是一段设置了字体、字号和颜色的文本<span class="language-xml"><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">此处的<span class="language-xml"><span class="tag">&lt;<span class="name">font</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span>被css取代</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab 渲染演示 --&gt;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">u</span>&gt;</span></span>下划线演示<span class="language-xml"><span class="tag">&lt;/<span class="name">u</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">文字<span class="strong">**加粗**</span>演示</span><br><span class="line"></span><br><span class="line">文字<span class="emphasis">*斜体*</span>演示</span><br><span class="line"></span><br><span class="line">文本<span class="code">`高亮`</span>演示</span><br><span class="line"></span><br><span class="line">文本~~删除~~线演示</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">font</span> <span class="attr">size</span> = <span class="string">5</span>&gt;</span></span>5号字<span class="language-xml"><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">font</span> <span class="attr">face</span>=<span class="string">&quot;黑体&quot;</span>&gt;</span></span>黑体<span class="language-xml"><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">blue</span>&gt;</span></span>蓝色<span class="language-xml"><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">MistyRose</span>&gt;</span></span>这里的背景色是：MistyRosen，此处输入任意想输入的内容<span class="language-xml"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&#123;% endtabs %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info flat %&#125;上述要点可参考:[<span class="string">【Markdown语法】字体颜色大小及文字底色设置</span>](<span class="link">https://blog.csdn.net/qq_43732429/article/details/108034518</span>)</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="section">## 1.4 引用</span></span><br><span class="line"></span><br><span class="line">&#123;% tabs 分栏 %&#125;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab 示例源码 --&gt;</span><br><span class="line">Markdown</span><br><span class="line"><span class="quote">&gt;  Java</span></span><br><span class="line"><span class="quote">&gt; 二级引用演示</span></span><br><span class="line"><span class="quote">&gt; MySQL</span></span><br><span class="line"><span class="quote">&gt; &gt;外键</span></span><br><span class="line"><span class="quote">&gt; &gt;</span></span><br><span class="line"><span class="quote">&gt; &gt;事务</span></span><br><span class="line"><span class="quote">&gt; &gt;</span></span><br><span class="line"><span class="quote">&gt; &gt;<span class="strong">**行级锁**</span>(引用内部一样可以用格式)</span></span><br><span class="line"><span class="quote">&gt; </span></span><br><span class="line"><span class="quote">&gt; ....</span></span><br></pre></td></tr></table></figure></div><div class="tab-item-content"><blockquote><p> Java<br>二级引用演示<br>MySQL</p><blockquote><p>外键 </p><p>事务</p><p><strong>行级锁</strong>(引用内部一样可以用格式)</p></blockquote><p>….</p></blockquote></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h2 id="1-5-分割线"><a href="#1-5-分割线" class="headerlink" title="1.5 分割线"></a>1.5 分割线</h2><div class="tabs"><div class="nav-tabs"><button type="button" class="tab active">示例源码</button><button type="button" class="tab">渲染演示</button></div><div class="tab-contents"><div class="tab-item-content active"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line"><span class="strong">**<span class="emphasis">*</span></span></span><br></pre></td></tr></table></figure></div><div class="tab-item-content"><hr><hr></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h2 id="1-6-列表-跟空格都可以"><a href="#1-6-列表-跟空格都可以" class="headerlink" title="1.6 列表(*,+,-跟空格都可以)"></a>1.6 列表(*,+,-跟空格都可以)</h2><h3 id="1-6-1-无序列表"><a href="#1-6-1-无序列表" class="headerlink" title="1.6.1 无序列表"></a>1.6.1 无序列表</h3><div class="tabs"><div class="nav-tabs"><button type="button" class="tab active">示例源码</button><button type="button" class="tab">渲染演示</button></div><div class="tab-contents"><div class="tab-item-content active"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">*</span> Java</span><br><span class="line"><span class="bullet">*</span> Python</span><br><span class="line"><span class="bullet">*</span> ...</span><br><span class="line"></span><br><span class="line"><span class="bullet">+</span> Java</span><br><span class="line"><span class="bullet">+</span> Python</span><br><span class="line"><span class="bullet">+</span> ...</span><br><span class="line"></span><br><span class="line"><span class="bullet">-</span> Java</span><br><span class="line"><span class="bullet">-</span> Python</span><br><span class="line"><span class="bullet">-</span> ...</span><br></pre></td></tr></table></figure></div><div class="tab-item-content"><ul><li>Java</li><li>Python</li><li>…</li></ul><ul><li>Java</li><li>Python</li><li>…</li></ul><ul><li>Java</li><li>Python</li><li>…</li></ul></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h3 id="1-6-2-有序列表"><a href="#1-6-2-有序列表" class="headerlink" title="1.6.2 有序列表"></a>1.6.2 有序列表</h3><div class="tabs"><div class="nav-tabs"><button type="button" class="tab active">示例源码</button><button type="button" class="tab">渲染演示</button></div><div class="tab-contents"><div class="tab-item-content active"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 注意后面有空格</span></span><br><span class="line"><span class="bullet">1.</span> </span><br><span class="line"><span class="bullet">2.</span> </span><br><span class="line"><span class="bullet">3.</span> </span><br><span class="line"><span class="bullet">4.</span> </span><br></pre></td></tr></table></figure></div><div class="tab-item-content"><ol><li></li><li></li><li></li><li></li></ol></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h2 id="1-7-图片"><a href="#1-7-图片" class="headerlink" title="1.7 图片"></a>1.7 图片</h2><div class="tabs"><div class="nav-tabs"><button type="button" class="tab active">示例源码</button><button type="button" class="tab">渲染演示</button></div><div class="tab-contents"><div class="tab-item-content active"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># 本地图片</span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;/assets/pusheencode.webp&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;示例图片&quot;</span> <span class="attr">style</span>=<span class="string">&quot;zoom:50%;&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="section"># 在线图片</span></span><br><span class="line">![<span class="string">code</span>](<span class="link">https://cdn.jsdelivr.net/gh/fomalhaut1998/markdown_pic/img/code.png</span>)</span><br></pre></td></tr></table></figure></div><div class="tab-item-content"><p>本地图片:<br><img src="/assets/pusheencode.webp" alt="示例图片" style="zoom:50%;" /><br>在线图片:<br><img src="https://cdn.jsdelivr.net/gh/fomalhaut1998/markdown_pic/img/code.png" alt="code"></p></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h2 id="1-8-表格"><a href="#1-8-表格" class="headerlink" title="1.8 表格"></a>1.8 表格</h2><div class="tabs"><div class="nav-tabs"><button type="button" class="tab active">示例源码</button><button type="button" class="tab">渲染演示</button></div><div class="tab-contents"><div class="tab-item-content active"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">| 项目标号 | 资金     | 备注 |</span><br><span class="line">| -------- | -------- | ---- |</span><br><span class="line">| 1        | 100，000 | 无   |</span><br><span class="line">| 2        | 200，000 | 无   |</span><br><span class="line">| 3        | 300,600  | 重要 |</span><br></pre></td></tr></table></figure></div><div class="tab-item-content"><div class="table-container"><table><thead><tr><th>项目标号</th><th>资金</th><th>备注</th></tr></thead><tbody><tr><td>1</td><td>100，000</td><td>无</td></tr><tr><td>2</td><td>200，000</td><td>无</td></tr><tr><td>3</td><td>300,600</td><td>重要</td></tr></tbody></table></div></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><h2 id="1-9-公式"><a href="#1-9-公式" class="headerlink" title="1.9 公式"></a>1.9 公式</h2><div class="tabs"><div class="nav-tabs"><button type="button" class="tab active">示例源码</button><button type="button" class="tab">渲染演示</button></div><div class="tab-contents"><div class="tab-item-content active"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$$</span><br><span class="line">\Gamma(z)=\int<span class="emphasis">_0^\infty t^&#123;z-1&#125;e^&#123;-t&#125;dt.</span></span><br><span class="line"><span class="emphasis">$$</span></span><br></pre></td></tr></table></figure></div><div class="tab-item-content"><script type="math/tex; mode=display">\Gamma(z)=\int_0^\infty t^{z-1}e^{-t}dt.</script></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div>]]></content>
      
      
      <categories>
          
          <category> 演示 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
